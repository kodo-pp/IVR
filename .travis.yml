language: cpp
sudo: enabled
matrix:
  include:
    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - libirrlicht-dev
            - clang-5.0
            - libboost-all-dev
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - DISABLE_BOOST_STACKTRACE=yes

before_install:
    - eval "${MATRIX_EVAL}"
    - sudo ln -s /usr/lib/x86_64-linux-gnu/libIrrlicht.so.1.8 /usr/lib
    - sudo ln -sf "$(which gcc-7)" /usr/bin/cc
    - sudo ln -sf "$(which g++-7)" /usr/bin/c++
    - sudo mv /usr/bin/gcc /usr/bin/gcc.old
    - sudo mv /usr/bin/g++ /usr/bin/g++.old
    - sudo ln -sf "$(which gcc-7)" /usr/bin/gcc
    - sudo ln -sf "$(which g++-7)" /usr/bin/g++
script:
    - FORCE_REBUILD=yes ./build.sh
    - for debug in 'yes' 'no'; do
          for toolchain in 'gcc' 'generic' 'clang'; do
              for nproc in '1' '4'; do
                  echo "Testing toolchain '${toolchain}', debug=${debug}, proc_count=${nproc}";
                  if [[ "$toolchain" == "clang" ]]; then
                      export USE_LTO="no";
                  else
                      export USE_LTO="yes";
                  fi;
                  if ! CC_TOOLCHAIN="${toolchain}" DEBUG="${debug}" PROC_COUNT="${nproc}" FORCE_REBUILD=yes ./build.sh; then
                      echo "Failed";
                      exit 1;
                  fi;
              done;
          done;
      done
    - CUSTOM_CC='/usr/bin/cc' CUSTOM_CXX='/usr/bin/c++' CUSTOM_LD='c++' CC_TOOLCHAIN='custom' FORCE_REBUILD='yes' DEBUG='yes' ./build.sh
    - CUSTOM_CC='/usr/bin/cc' CUSTOM_CXX='/usr/bin/c++' CUSTOM_LD='c++' CC_TOOLCHAIN='custom' FORCE_REBUILD='yes' DEBUG='no' ./build.sh
    - ./clang-tidy.py
